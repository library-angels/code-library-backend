on:
    push:
        branches:
            - "master"
        paths-ignore:
            - "**/*.md"

jobs:
    deploy:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                service: ["api", "book", "borrow", "identity", "notification"]
            fail-fast: false

        env:
            REGISTRY: ${{ secrets.AWS_ECR_REGISTRY }}
            REPOSITORY: code-library-${{ matrix.service }}

        steps:
            - uses: actions/checkout@v2

            - name: Check if service changed
              id: did_change
              run: |
                  echo "::set-output name=did_change::$( \
                  python3 tools/check_if_pr_changed_files.py \
                  '${{ toJSON(github.event.commits.*.id) }}' \
                  '["${{ matrix.service }}", "Cargo.lock", ".github/workflows/cd.yml"]' \
                  )"

            - name: Build Docker image
              if: steps.did_change.outputs.did_change == 'True'
              run: docker build -t "$REGISTRY/$REPOSITORY:latest-dev" -f ${{ matrix.service }}/Dockerfile .

            - name: Configure AWS credentials
              if: steps.did_change.outputs.did_change == 'True'
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: eu-central-1
            - name: Login to Amazon ECR
              if: steps.did_change.outputs.did_change == 'True'
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v1

            - name: Push Docker image
              if: steps.did_change.outputs.did_change == 'True'
              run: docker push "$REGISTRY/$REPOSITORY:latest-dev"
